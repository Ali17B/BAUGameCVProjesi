// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OyunlastirilmisCV.DataAccess;

#nullable disable

namespace OyunlastirilmisCV.DataAccess.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    [Migration("20250513152021_TSorulariEklendi")]
    partial class TSorulariEklendi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Beceri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZorlukSeviyesi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Beceriler");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KisilikTestiSonucu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Renk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId")
                        .IsUnique();

                    b.ToTable("KisilikTestiSonuclari");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KisilikTestiSorusu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kirmizi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mavi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yesil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KisilikTestiSorulari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Kirmizi = "Risk Alabilen",
                            Mavi = "Analitik",
                            Sari = "İyimser",
                            Yesil = "Uyumlu"
                        },
                        new
                        {
                            Id = 2,
                            Kirmizi = "İkna Edici",
                            Mavi = "Ölçülü",
                            Sari = "Enerjik",
                            Yesil = "Güvenilir"
                        },
                        new
                        {
                            Id = 3,
                            Kirmizi = "Sorumluluk Alan",
                            Mavi = "Bencil",
                            Sari = "Sosyal",
                            Yesil = "Sakin"
                        },
                        new
                        {
                            Id = 4,
                            Kirmizi = "Rekabetçi",
                            Mavi = "Dikkatli",
                            Sari = "İnandırıcı",
                            Yesil = "Kontrollü"
                        },
                        new
                        {
                            Id = 5,
                            Kirmizi = "Becerikli",
                            Mavi = "Saygılı",
                            Sari = "Öğretici",
                            Yesil = "Programa Bağlı"
                        },
                        new
                        {
                            Id = 6,
                            Kirmizi = "Güç Veren",
                            Mavi = "Tedbirli",
                            Sari = "Lider",
                            Yesil = "Halinden Memnun"
                        },
                        new
                        {
                            Id = 7,
                            Kirmizi = "Pozitif",
                            Mavi = "Planlı",
                            Sari = "Destekleyici",
                            Yesil = "Sabırlı"
                        },
                        new
                        {
                            Id = 8,
                            Kirmizi = "Özgüvenli",
                            Mavi = "Düzenli",
                            Sari = "Doğal Karizmatik",
                            Yesil = "Ağırbaşlı"
                        },
                        new
                        {
                            Id = 9,
                            Kirmizi = "Dobra",
                            Mavi = "Ciddi",
                            Sari = "Neşeli",
                            Yesil = "İletişimi Kuvvetli"
                        },
                        new
                        {
                            Id = 10,
                            Kirmizi = "Otoriter",
                            Mavi = "Resmi",
                            Sari = "İletişim Seven",
                            Yesil = "Arkadaşçıl"
                        },
                        new
                        {
                            Id = 11,
                            Kirmizi = "Cesur",
                            Mavi = "Detaycı",
                            Sari = "Girişken",
                            Yesil = "İş Birlikçi"
                        },
                        new
                        {
                            Id = 12,
                            Kirmizi = "İş Güvenilir",
                            Mavi = "Sanatla İlgilenen",
                            Sari = "Yenilikçi Fikir Sahibi",
                            Yesil = "Tutarli"
                        },
                        new
                        {
                            Id = 13,
                            Kirmizi = "Bağımsız",
                            Mavi = "Mantıksal",
                            Sari = "Cömert",
                            Yesil = "İlimli"
                        },
                        new
                        {
                            Id = 14,
                            Kirmizi = "Sonuç Odaklı",
                            Mavi = "Eleştiren",
                            Sari = "İnsancıl",
                            Yesil = "Hazır Cevap"
                        },
                        new
                        {
                            Id = 15,
                            Kirmizi = "Harekete Geçiren",
                            Mavi = "Gerçekçi",
                            Sari = "Sıcak Kanlı",
                            Yesil = "Arabulucu"
                        },
                        new
                        {
                            Id = 16,
                            Kirmizi = "Azimli",
                            Mavi = "Düşünce Yoğun",
                            Sari = "Konuşkan",
                            Yesil = "Hoşgörülü"
                        },
                        new
                        {
                            Id = 17,
                            Kirmizi = "Girişimci",
                            Mavi = "Araştırmacı",
                            Sari = "Hareketli",
                            Yesil = "İyi Dinleyici"
                        },
                        new
                        {
                            Id = 18,
                            Kirmizi = "Pratik",
                            Mavi = "Sayısal",
                            Sari = "Hayalci",
                            Yesil = "Hesaplayan"
                        },
                        new
                        {
                            Id = 19,
                            Kirmizi = "Üretken",
                            Mavi = "Analitik",
                            Sari = "Empati Kurabilen",
                            Yesil = "Sadık"
                        },
                        new
                        {
                            Id = 20,
                            Kirmizi = "Hızlı",
                            Mavi = "Disiplinli",
                            Sari = "Coşkulu",
                            Yesil = "Dengeli"
                        });
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BeceriId")
                        .HasColumnType("int");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KisilikRengi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seviye")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sinifi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeceriId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciBecerisi", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("BeceriId")
                        .HasColumnType("int");

                    b.Property<int>("Seviye")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId", "BeceriId");

                    b.HasIndex("BeceriId");

                    b.ToTable("KullaniciBecerileri");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciProjesi", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId", "ProjeId");

                    b.HasIndex("ProjeId");

                    b.ToTable("KullaniciProjeleri");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciRozeti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("KazanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("RozetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("RozetId");

                    b.ToTable("KullaniciRozetleri");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Proje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("ProjeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZorlukSeviyesi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Projeler");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Rozet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IkonUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rozetler");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KisilikTestiSonucu", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Kullanici", "Kullanici")
                        .WithOne("KisilikTestiSonucu")
                        .HasForeignKey("OyunlastirilmisCV.Entities.KisilikTestiSonucu", "KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Kullanici", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Beceri", null)
                        .WithMany("Kullanicilar")
                        .HasForeignKey("BeceriId");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciBecerisi", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Beceri", "Beceri")
                        .WithMany("KullaniciBecerileri")
                        .HasForeignKey("BeceriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OyunlastirilmisCV.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciBecerileri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beceri");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciProjesi", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciProjeleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OyunlastirilmisCV.Entities.Proje", "Proje")
                        .WithMany("KullaniciProjeleri")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.KullaniciRozeti", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciRozetleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OyunlastirilmisCV.Entities.Rozet", "Rozet")
                        .WithMany("KullaniciRozetleri")
                        .HasForeignKey("RozetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Rozet");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Proje", b =>
                {
                    b.HasOne("OyunlastirilmisCV.Entities.Kullanici", "Kullanici")
                        .WithMany("Projeler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Beceri", b =>
                {
                    b.Navigation("KullaniciBecerileri");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Kullanici", b =>
                {
                    b.Navigation("KisilikTestiSonucu")
                        .IsRequired();

                    b.Navigation("KullaniciBecerileri");

                    b.Navigation("KullaniciProjeleri");

                    b.Navigation("KullaniciRozetleri");

                    b.Navigation("Projeler");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Proje", b =>
                {
                    b.Navigation("KullaniciProjeleri");
                });

            modelBuilder.Entity("OyunlastirilmisCV.Entities.Rozet", b =>
                {
                    b.Navigation("KullaniciRozetleri");
                });
#pragma warning restore 612, 618
        }
    }
}
